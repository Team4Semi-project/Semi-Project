<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="kr.co.lemona.board.model.mapper.DefaultBoardMapper">

	<!-- 게시글 수 조회 -->
	<select id="getListCount">
		SELECT COUNT(*)
		FROM "BOARD"
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
	</select>

	<!-- 게시글 조회 -->
	<select id="selectBoardList">
		SELECT
		B.BOARD_NO,
		B.BOARD_TITLE,
		B.READ_COUNT,
		M.MEMBER_NICKNAME,
		B.BOARD_CODE,
		B.BOARD_CONTENT,

		(SELECT COUNT(*) FROM "DEFAULT_COMMENT" C WHERE
		C.BOARD_NO = B.BOARD_NO AND
		COMMENT_DEL_FL = 'N') COMMENT_COUNT,

		(SELECT COUNT(*) FROM
		"DEFAULT_BOARD_LIKE" L WHERE L.BOARD_NO = B.BOARD_NO)
		LIKE_COUNT,
		CASE
		WHEN LB.MEMBER_NO IS NOT NULL THEN 1
		ELSE 0
		END AS
		LIKE_CHECK,
		<![CDATA[
			CASE 
				WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 / 60
				THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60 * 60) || '초 전'
				
				WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24
				THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60) || '분 전'
				
				WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 
				THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24) || '시간 전'
			ELSE TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD')
			END BOARD_CREATE_DATE
		]]>

		FROM "BOARD" B
		JOIN "MEMBER" M ON(B.MEMBER_NO = M.MEMBER_NO)
		LEFT JOIN (
		SELECT BOARD_NO, MEMBER_NO
		FROM "DEFAULT_BOARD_LIKE"
		WHERE MEMBER_NO =
		#{memberNo}
		) LB ON LB.BOARD_NO = B.BOARD_NO
		WHERE
		BOARD_DEL_FL = 'N'
		AND
		BOARD_CODE = #{boardCode}
		<!-- 정렬 -->
		<choose>
			<when test="sort == 'latest'">
				ORDER BY B.BOARD_NO DESC
			</when>
			<when test="sort == 'oldest'">
				ORDER BY B.BOARD_NO ASC
			</when>
			<when test="sort == 'popular'">
				ORDER BY
				(SELECT COUNT(*)
				FROM "DEFAULT_BOARD_LIKE" L
				WHERE L.BOARD_NO = B.BOARD_NO) DESC,
				B.READ_COUNT DESC,
				B.BOARD_NO DESC
			</when>
			<when test="sort == 'views'">
				ORDER BY B.READ_COUNT DESC,
				(SELECT COUNT(*)
				FROM "DEFAULT_BOARD_LIKE" L
				WHERE L.BOARD_NO = B.BOARD_NO) DESC,
				B.BOARD_NO DESC
			</when>
		</choose>
	</select>

	<!-- 게시글 상세 조회 -->
	<select id="selectOne" resultType="Board">
		SELECT BOARD_NO, BOARD_TITLE,
		BOARD_CONTENT, BOARD_CODE, READ_COUNT,
		MEMBER_NO, MEMBER_NICKNAME,
		PROFILE_IMG,
		TO_CHAR(BOARD_CREATE_DATE,
		'YYYY"년" MM"월" DD"일"
		HH24:MI:SS') BOARD_CREATE_DATE,
		TO_CHAR(BOARD_UPDATE_DATE, 'YYYY"년"
		MM"월" DD"일"
		HH24:MI:SS')
		BOARD_UPDATE_DATE,

		(SELECT COUNT(*) FROM
		DEFAULT_COMMENT WHERE BOARD_NO = #{boardNo} AND
		COMMENT_DEL_FL = 'N')
		AS COMMENT_COUNT,

		(SELECT COUNT(*)
		FROM
		"DEFAULT_BOARD_LIKE"
		WHERE
		BOARD_NO = #{boardNo}) LIKE_COUNT,

		(SELECT
		COUNT(*)
		FROM
		"DEFAULT_BOARD_LIKE"
		WHERE BOARD_NO = #{boardNo}
		AND
		MEMBER_NO =
		#{memberNo}) LIKE_CHECK

		FROM "BOARD"
		JOIN
		"MEMBER"
		USING(MEMBER_NO)
		WHERE
		BOARD_DEL_FL = 'N'
		AND BOARD_NO = #{boardNo}
		AND
		BOARD_CODE =
		#{boardCode}
	</select>

	<!-- 이전 글 번호 조회 -->
	<select id="selectPrevBoard">
		SELECT *
		FROM BOARD B
		WHERE BOARD_NO &lt; #{boardNo}
		AND BOARD_CODE = #{boardCode}
		AND BOARD_DEL_FL = 'N'
		ORDER BY BOARD_NO
		DESC
		FETCH FIRST 1 ROWS ONLY
	</select>

	<!-- 다음 글 번호 조회 -->
	<select id="selectNextBoard">
		SELECT *
		FROM BOARD B
		WHERE BOARD_NO &gt; #{boardNo}
		AND BOARD_CODE = #{boardCode}
		AND BOARD_DEL_FL = 'N'
		ORDER BY BOARD_NO
		FETCH FIRST 1 ROWS ONLY
	</select>

	<!-- 검색 시 이전 글 번호 조회 -->
	<!-- 지현 -->
	<select id="searchPrevBoard">
		SELECT *
		FROM (
		SELECT ROW_NUMBER() OVER (
		ORDER BY
		<choose>
			<when test="sort == 1">
				B.BOARD_NO DESC
			</when>
			<when test="sort == 2">
				B.BOARD_NO ASC
			</when>
			<when test="sort == 3">
				L.LIKE_COUNT DESC, B.READ_COUNT DESC, B.BOARD_NO DESC
			</when>
			<when test="sort == 4">
				B.READ_COUNT DESC, L.LIKE_COUNT DESC, B.BOARD_NO DESC
			</when>
		</choose>
		) AS RN, B.*
		FROM BOARD B
		JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO

		LEFT JOIN (
		SELECT BOARD_NO, COUNT(*) AS LIKE_COUNT
		FROM DEFAULT_BOARD_LIKE
		GROUP BY BOARD_NO
		) L ON B.BOARD_NO = L.BOARD_NO

		WHERE B.BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		<choose>
			<when test='key == 1'>
				AND B.BOARD_TITLE LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == 2'>
				AND BOARD_CONTENT LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == 3'>
				AND (
				B.BOARD_TITLE LIKE '%' || #{queryb} || '%'
				OR BOARD_CONTENT LIKE '%' || #{queryb} || '%'
				)
			</when>
			<when test='key == 4'>
				AND M.MEMBER_NICKNAME LIKE '%' || #{queryb} || '%'
			</when>
		</choose>
		) R
		WHERE R.RN = (
		SELECT RN + 1 FROM (
		SELECT B.BOARD_NO,
		ROW_NUMBER() OVER (
		ORDER BY
		<choose>
			<when test="sort == 1">
				B.BOARD_NO DESC
			</when>
			<when test="sort == 2">
				B.BOARD_NO ASC
			</when>
			<when test="sort == 3">
				L.LIKE_COUNT DESC, B.READ_COUNT DESC, B.BOARD_NO DESC
			</when>
			<when test="sort == 4">
				B.READ_COUNT DESC, L.LIKE_COUNT DESC, B.BOARD_NO DESC
			</when>
		</choose>
		) AS RN
		FROM BOARD B
		JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO

		LEFT JOIN (
		SELECT BOARD_NO, COUNT(*) AS LIKE_COUNT
		FROM DEFAULT_BOARD_LIKE
		GROUP BY BOARD_NO
		) L ON B.BOARD_NO = L.BOARD_NO

		WHERE B.BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		<choose>
			<when test='key == 1'>
				AND B.BOARD_TITLE LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == 2'>
				AND BOARD_CONTENT LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == 3'>
				AND (
				B.BOARD_TITLE LIKE '%' || #{queryb} || '%'
				OR BOARD_CONTENT LIKE '%' || #{queryb} || '%'
				)
			</when>
			<when test='key == 4'>
				AND M.MEMBER_NICKNAME LIKE '%' || #{queryb} || '%'
			</when>
		</choose>
		) WHERE BOARD_NO = ${boardNo}
		)
	</select>

	<!-- 검색 시 다음 글 번호 조회 -->
	<!-- 지현 -->
	<select id="searchNextBoard">
		SELECT *
		FROM (
		SELECT ROW_NUMBER() OVER (
		ORDER BY
		<choose>
			<when test="sort == 1">
				B.BOARD_NO DESC
			</when>
			<when test="sort == 2">
				B.BOARD_NO ASC
			</when>
			<when test="sort == 3">
				L.LIKE_COUNT DESC, B.READ_COUNT DESC, B.BOARD_NO DESC
			</when>
			<when test="sort == 4">
				B.READ_COUNT DESC, L.LIKE_COUNT DESC, B.BOARD_NO DESC
			</when>
		</choose>
		) AS RN, B.*
		FROM BOARD B
		JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO

		LEFT JOIN (
		SELECT BOARD_NO, COUNT(*) AS LIKE_COUNT
		FROM DEFAULT_BOARD_LIKE
		GROUP BY BOARD_NO
		) L ON B.BOARD_NO = L.BOARD_NO

		WHERE B.BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		<choose>
			<when test='key == 1'>
				AND B.BOARD_TITLE LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == 2'>
				AND BOARD_CONTENT LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == 3'>
				AND (
				B.BOARD_TITLE LIKE '%' || #{queryb} || '%'
				OR BOARD_CONTENT LIKE '%' || #{queryb} || '%'
				)
			</when>
			<when test='key == 4'>
				AND M.MEMBER_NICKNAME LIKE '%' || #{queryb} || '%'
			</when>
		</choose>
		) R
		WHERE R.RN = (
		SELECT RN - 1 FROM (
		SELECT B.BOARD_NO,
		ROW_NUMBER() OVER (
		ORDER BY
		<choose>
			<when test="sort == 1">
				B.BOARD_NO DESC
			</when>
			<when test="sort == 2">
				B.BOARD_NO ASC
			</when>
			<when test="sort == 3">
				L.LIKE_COUNT DESC, B.READ_COUNT DESC, B.BOARD_NO DESC
			</when>
			<when test="sort == 4">
				B.READ_COUNT DESC, L.LIKE_COUNT DESC, B.BOARD_NO DESC
			</when>
		</choose>
		) AS RN
		FROM BOARD B
		JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO

		LEFT JOIN (
		SELECT BOARD_NO, COUNT(*) AS LIKE_COUNT
		FROM DEFAULT_BOARD_LIKE
		GROUP BY BOARD_NO
		) L ON B.BOARD_NO = L.BOARD_NO

		WHERE B.BOARD_DEL_FL = 'N'
		AND BOARD_CODE = #{boardCode}
		<choose>
			<when test='key == 1'>
				AND B.BOARD_TITLE LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == 2'>
				AND BOARD_CONTENT LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == 3'>
				AND (
				B.BOARD_TITLE LIKE '%' || #{queryb} || '%'
				OR BOARD_CONTENT LIKE '%' || #{queryb} || '%'
				)
			</when>
			<when test='key == 4'>
				AND M.MEMBER_NICKNAME LIKE '%' || #{queryb} || '%'
			</when>
		</choose>
		) WHERE BOARD_NO = ${boardNo}
		)
	</select>




	<!-- 조회수 1 증가 -->
	<!-- 미애 -->
	<update id="updateReadCount">
		UPDATE "BOARD" SET
		READ_COUNT = READ_COUNT + 1
		WHERE
		BOARD_NO = #{boardNo}
	</update>

	<!-- 조회수 조회 -->
	<!-- 미애 -->
	<select id="selectReadCount">
		SELECT READ_COUNT
		FROM "BOARD"
		WHERE BOARD_NO =
		#{boardNo}
	</select>

	<!-- 좋아요 해제 -->
	<!-- 재호 -->
	<delete id="decreaseLikeCount">
		DELETE FROM "DEFAULT_BOARD_LIKE"
		WHERE MEMBER_NO =
		#{memberNo}
		AND BOARD_NO = #{boardNo}
	</delete>

	<!-- 촣아요 체크 -->
	<!-- 재호 -->
	<insert id="increaseLikeCount">
		INSERT INTO "DEFAULT_BOARD_LIKE"
		VALUES(#{memberNo},#{boardNo})
	</insert>

	<!-- 좋아요 갯수 갱신 -->
	<!-- 재호 -->
	<select id="updateLikeCount">
		SELECT COUNT(*) FROM "DEFAULT_BOARD_LIKE"
		WHERE
		BOARD_NO = #{boardNo}
	</select>

	<!-- 상세 조회한 게시글의 댓글 수 조회 -->
	<select id="commentCount" resultType="int">
		SELECT COUNT(*) AS
		COMMENT_COUNT FROM "DEFAULT_COMMENT"
		WHERE BOARD_NO = #{boardNo} AND
		COMMENT_DEL_FL = 'N'
	</select>

	<!-- 상세 조회한 게시글의 댓글 목록 조회 -->
	<select id="selectCommentList" resultType="DefaultComment"
		parameterType="map">
		SELECT LEVEL, C.*,
		(SELECT COUNT(*) FROM "DEFAULT_COMMENT_LIKE" L WHERE L.COMMENT_NO =
		C.COMMENT_NO) AS LIKE_COUNT,
		(SELECT COUNT(*) FROM "DEFAULT_COMMENT_LIKE" L
		WHERE L.COMMENT_NO = C.COMMENT_NO AND L.MEMBER_NO = #{memberNo}) AS
		LIKE_CHECK
		FROM
		(SELECT COMMENT_NO, COMMENT_CONTENT,

		<![CDATA[
		    CASE
		        WHEN SYSDATE - COMMENT_WRITE_DATE < 1 / 24 / 60 THEN 
		            FLOOR((SYSDATE - COMMENT_WRITE_DATE) * 24 * 60 * 60) || '초 전'
		        WHEN SYSDATE - COMMENT_WRITE_DATE < 1 / 24 THEN 
		            FLOOR((SYSDATE - COMMENT_WRITE_DATE) * 24 * 60) || '분 전'
		        WHEN SYSDATE - COMMENT_WRITE_DATE < 1 THEN 
		            FLOOR((SYSDATE - COMMENT_WRITE_DATE) * 24) || '시간 전'
		        ELSE 
		            TO_CHAR(COMMENT_WRITE_DATE, 'YYYY-MM-DD')
		    END AS COMMENT_WRITE_DATE,
		]]>

		BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG,
		PARENT_COMMENT_NO, COMMENT_DEL_FL
		FROM "DEFAULT_COMMENT"
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_NO = #{boardNo}) C
		WHERE COMMENT_DEL_FL = 'N'
		OR 0 != (SELECT COUNT(*) FROM "DEFAULT_COMMENT" SUB
		WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO AND COMMENT_DEL_FL = 'N')
		START WITH PARENT_COMMENT_NO IS NULL
		CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
		ORDER SIBLINGS BY COMMENT_NO
	</select>

	<!-- 검색 조건이 맞는 게시글 수 조회 -->
	<!-- 지현 -->
	<select id="getSearchCount">
		SELECT COUNT(*)
		FROM "BOARD"
		<if test='key == "w"'>
			JOIN "MEMBER" USING(MEMBER_NO)
		</if>
		WHERE BOARD_DEL_FL = 'N'
		AND BOARD_CODE = ${boardCode}
		<choose>
			<when test='key == "t"'>
				AND BOARD_TITLE LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == "c"'>
				AND BOARD_CONTENT LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == "tc"'>
				AND (
				BOARD_TITLE LIKE '%' || #{queryb} || '%'
				OR
				BOARD_CONTENT LIKE '%' || #{queryb} || '%'
				)
			</when>
			<when test='key == "w"'>
				AND MEMBER_NICKNAME LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == "h"'>
				AND 1 = 0
			</when>
		</choose>
	</select>

	<!-- 검색 결과 목록 조회 -->
	<!-- 지현 -->
	<select id="selectSearchList">
		SELECT
		B.BOARD_NO,
		B.BOARD_TITLE,
		B.READ_COUNT,
		M.MEMBER_NICKNAME,
		B.BOARD_CODE,
		M.PROFILE_IMG,

		(SELECT COUNT(*)
		FROM DEFAULT_COMMENT C
		WHERE C.BOARD_NO = B.BOARD_NO) AS COMMENT_COUNT,

		(SELECT COUNT(*)
		FROM
		DEFAULT_BOARD_LIKE L
		WHERE L.BOARD_NO = B.BOARD_NO) AS LIKE_COUNT,

		S.IMG_PATH AS THUMBNAIL_IMG_PATH,
		S.IMG_RENAME AS THUMBNAIL_IMG_RENAME,

		B.BOARD_CREATE_DATE AS RAW_DATE,

        <![CDATA[
        CASE
            WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 / 60 THEN 
                FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60 * 60) || '초 전'
            WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 THEN 
                FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60) || '분 전'
            WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 THEN 
                FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24) || '시간 전'
            ELSE 
                TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD')
        END
        ]]>
		AS BOARD_CREATE_DATE,

		'DEFAULT' AS BOARD_TYPE

		FROM BOARD B
		JOIN MEMBER M
		ON B.MEMBER_NO = M.MEMBER_NO
		LEFT JOIN (
		SELECT BOARD_NO, IMG_PATH,
		IMG_RENAME
		FROM BOARD_STEP
		WHERE THUMBNAIL_CHECK = 'Y'
		) S ON (B.BOARD_NO
		= S.BOARD_NO)
		WHERE B.BOARD_DEL_FL = 'N'
		AND BOARD_CODE = ${boardCode}

		<choose>
			<when test='key == "t"'>
				AND B.BOARD_TITLE LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == "c"'>
				AND B.BOARD_CONTENT LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == "tc"'>
				AND (
				B.BOARD_TITLE LIKE '%' || #{queryb} || '%'
				OR
				B.BOARD_CONTENT LIKE '%' || #{queryb} || '%'
				)
			</when>
			<when test='key == "w"'>
				AND M.MEMBER_NICKNAME LIKE '%' || #{queryb} || '%'
			</when>
			<when test='key == "h"'>
				AND 1 = 0
			</when>
		</choose>

		<!-- 정렬 -->
		<choose>
			<when test="sort == null or sort == '' or sort == 'latest'">
				ORDER BY B.BOARD_NO DESC
			</when>
			<when test="sort == 'oldest'">
				ORDER BY B.BOARD_NO ASC
			</when>
			<when test="sort == 'popular'">
				ORDER BY
				(SELECT COUNT(*)
				FROM "DEFAULT_BOARD_LIKE" L
				WHERE L.BOARD_NO = B.BOARD_NO) DESC,
				B.READ_COUNT DESC,
				B.BOARD_NO
				DESC
			</when>
			<when test="sort == 'views'">
				ORDER BY B.READ_COUNT DESC,
				(SELECT COUNT(*)
				FROM
				"DEFAULT_BOARD_LIKE" L
				WHERE L.BOARD_NO = B.BOARD_NO) DESC,
				B.BOARD_NO
				DESC
			</when>
		</choose>
	</select>


<!-- 지현 / 통합 검색 시 이전 글 조회 -->
	<select id="searchAllPrevBoard">
WITH SEARCH_RESULT AS (
    SELECT
        ROW_NUMBER() OVER (ORDER BY
					<choose>
                       <when test="sort == 1">
                           BOARD_CREATE_DATE DESC,
                           BOARD_NO DESC
                       </when>
                       <when test="sort == 2">
                           BOARD_CREATE_DATE ASC
                       </when>
                       <when test="sort == 3">
                           LIKE_COUNT DESC, READ_COUNT DESC, BOARD_CREATE_DATE DESC
                       </when>
                       <when test="sort == 4">
                           READ_COUNT DESC, LIKE_COUNT DESC, BOARD_CREATE_DATE DESC
                       </when>
                   </choose> ) AS RN,
        BOARD_NO,
        BOARD_TITLE,
        READ_COUNT,
        MEMBER_NICKNAME,
        BOARD_CODE,
        PROFILE_IMG,
        COMMENT_COUNT,
        LIKE_COUNT,
        THUMBNAIL_IMG_PATH,
        THUMBNAIL_IMG_RENAME,
        TAGS,
        RAW_DATE,
        BOARD_CREATE_DATE,
        BOARD_TYPE
    FROM (
        SELECT
            B.BOARD_NO,
            B.BOARD_TITLE,
            B.READ_COUNT,
            M.MEMBER_NICKNAME,
            B.BOARD_CODE,
            M.PROFILE_IMG,
            (SELECT COUNT(*) FROM DEFAULT_COMMENT C WHERE C.BOARD_NO = B.BOARD_NO) AS COMMENT_COUNT,
            (SELECT COUNT(*) FROM DEFAULT_BOARD_LIKE L WHERE L.BOARD_NO = B.BOARD_NO) AS LIKE_COUNT,
            S.IMG_PATH AS THUMBNAIL_IMG_PATH,
            S.IMG_RENAME AS THUMBNAIL_IMG_RENAME,
            NULL AS TAGS,
            B.BOARD_CREATE_DATE AS RAW_DATE,
            <![CDATA[
            CASE
                WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 / 60 THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60 * 60) || '초 전'
                WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60) || '분 전'
                WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24) || '시간 전'
                ELSE TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD')
            END 
            ]]>
            AS BOARD_CREATE_DATE,
            'DEFAULT' AS BOARD_TYPE
        FROM BOARD B
        JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO
        LEFT JOIN (
            SELECT BOARD_NO, IMG_PATH, IMG_RENAME
            FROM BOARD_STEP
            WHERE THUMBNAIL_CHECK = 'Y'
        ) S ON B.BOARD_NO = S.BOARD_NO
        
        WHERE B.BOARD_DEL_FL = 'N'
        
          <choose>
			<when test='key == 1'>
				AND B.BOARD_TITLE LIKE '%' || #{querys} || '%'
			</when>
			<when test='key == 2'>
				AND B.BOARD_CONTENT LIKE '%' || #{querys} || '%'
			</when>
			<when test='key == 3'>
				AND (
				B.BOARD_TITLE LIKE '%' || #{querys} || '%'
				OR
				B.BOARD_CONTENT LIKE '%' || #{querys} || '%'
				)
			</when>
			<when test='key == 4'>
				AND M.MEMBER_NICKNAME LIKE '%' || #{querys} || '%'
			</when>
			<when test='key == 5'>
				AND 1 = 0
			</when>
		</choose>

		UNION ALL

		SELECT
		B.BOARD_NO,
		B.BOARD_TITLE,
		B.READ_COUNT,
		M.MEMBER_NICKNAME,
		B.BOARD_CODE,
		M.PROFILE_IMG,
		(SELECT COUNT(*) FROM RECIPE_COMMENT C WHERE C.BOARD_NO = B.BOARD_NO) AS
		COMMENT_COUNT,
		(SELECT COUNT(*) FROM RECIPE_BOARD_LIKE L WHERE L.BOARD_NO = B.BOARD_NO) AS
		LIKE_COUNT,
		S.IMG_PATH AS THUMBNAIL_IMG_PATH,
		S.IMG_RENAME AS THUMBNAIL_IMG_RENAME,
		(SELECT LISTAGG(H.TAG_NAME, ', ') WITHIN GROUP (ORDER BY H.TAG_NAME)
		FROM BOARD_HASHTAG BH
		JOIN HASHTAG H ON BH.TAG_NO = H.TAG_NO
		WHERE BH.BOARD_NO = B.BOARD_NO) AS TAGS,
		B.BOARD_CREATE_DATE AS RAW_DATE,
            <![CDATA[
            CASE
                WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 / 60 THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60 * 60) || '초 전'
                WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60) || '분 전'
                WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24) || '시간 전'
                ELSE TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD')
            END 
            ]]>
            AS BOARD_CREATE_DATE,
            'RECIPE' AS BOARD_TYPE
        FROM RECIPE_BOARD B
        JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO
        LEFT JOIN (
            SELECT BOARD_NO, IMG_PATH, IMG_RENAME
            FROM BOARD_STEP
            WHERE THUMBNAIL_CHECK = 'Y'
        ) S ON B.BOARD_NO = S.BOARD_NO

        LEFT JOIN (
            SELECT BOARD_NO, LISTAGG(STEP_CONTENT, ' ') WITHIN GROUP (ORDER BY STEP_NO) AS STEP_CONTENTS
            FROM BOARD_STEP
            GROUP BY BOARD_NO
        ) STEP ON B.BOARD_NO = STEP.BOARD_NO
        
        WHERE B.BOARD_DEL_FL = 'N'
          <choose>
            <when test='key == 1'>
                AND B.BOARD_TITLE LIKE '%' || #{querys} || '%'
            </when>
            <when test='key == 2'>
                AND STEP.STEP_CONTENTS LIKE '%' || #{querys} || '%'
            </when>
            <when test='key == 3'>
                AND (
                    B.BOARD_TITLE LIKE '%' || #{querys} || '%'
                    OR STEP.STEP_CONTENTS LIKE '%' || #{querys} || '%'
                )
            </when>
            <when test='key == 4'>
                AND M.MEMBER_NICKNAME LIKE '%' || #{querys} || '%'
            </when>
            <when test='key == 5'>
                AND EXISTS (
                    SELECT 1
                    FROM BOARD_HASHTAG BH
                    JOIN HASHTAG HT ON BH.TAG_NO = HT.TAG_NO
                    WHERE BH.BOARD_NO = B.BOARD_NO
                    AND HT.TAG_NAME = REPLACE(#{querys}, '#', '')
                )
            </when>
        </choose>
    ) 
),
TARGET AS (
    SELECT RN
    FROM SEARCH_RESULT
    WHERE BOARD_NO = ${boardNo} AND BOARD_CODE = ${boardCode}
)
SELECT *
FROM SEARCH_RESULT
WHERE RN = (SELECT RN + 1 FROM TARGET)
</select>

<select id="searchAllNextBoard">
<!-- 지현 / 통합 검색 시 다음 글 조회 -->
WITH SEARCH_RESULT AS (
    SELECT
        ROW_NUMBER() OVER (ORDER BY
					<choose>
                       <when test="sort == 1">
                           BOARD_CREATE_DATE DESC,
                           BOARD_NO DESC
                       </when>
                       <when test="sort == 2">
                           BOARD_CREATE_DATE ASC
                       </when>
                       <when test="sort == 3">
                           LIKE_COUNT DESC, READ_COUNT DESC, BOARD_CREATE_DATE DESC
                       </when>
                       <when test="sort == 4">
                           READ_COUNT DESC, LIKE_COUNT DESC, BOARD_CREATE_DATE DESC
                       </when>
                   </choose> ) AS RN,
        BOARD_NO,
        BOARD_TITLE,
        READ_COUNT,
        MEMBER_NICKNAME,
        BOARD_CODE,
        PROFILE_IMG,
        COMMENT_COUNT,
        LIKE_COUNT,
        THUMBNAIL_IMG_PATH,
        THUMBNAIL_IMG_RENAME,
        TAGS,
        RAW_DATE,
        BOARD_CREATE_DATE,
        BOARD_TYPE
    FROM (
        SELECT
            B.BOARD_NO,
            B.BOARD_TITLE,
            B.READ_COUNT,
            M.MEMBER_NICKNAME,
            B.BOARD_CODE,
            M.PROFILE_IMG,
            (SELECT COUNT(*) FROM DEFAULT_COMMENT C WHERE C.BOARD_NO = B.BOARD_NO) AS COMMENT_COUNT,
            (SELECT COUNT(*) FROM DEFAULT_BOARD_LIKE L WHERE L.BOARD_NO = B.BOARD_NO) AS LIKE_COUNT,
            S.IMG_PATH AS THUMBNAIL_IMG_PATH,
            S.IMG_RENAME AS THUMBNAIL_IMG_RENAME,
            NULL AS TAGS,
            B.BOARD_CREATE_DATE AS RAW_DATE,
            <![CDATA[
            CASE
                WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 / 60 THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60 * 60) || '초 전'
                WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60) || '분 전'
                WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24) || '시간 전'
                ELSE TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD')
            END 
            ]]>
            AS BOARD_CREATE_DATE,
            'DEFAULT' AS BOARD_TYPE
        FROM BOARD B
        JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO
        LEFT JOIN (
            SELECT BOARD_NO, IMG_PATH, IMG_RENAME
            FROM BOARD_STEP
            WHERE THUMBNAIL_CHECK = 'Y'
        ) S ON B.BOARD_NO = S.BOARD_NO
        
        WHERE B.BOARD_DEL_FL = 'N'
        
          <choose>
			<when test='key == 1'>
				AND B.BOARD_TITLE LIKE '%' || #{querys} || '%'
			</when>
			<when test='key == 2'>
				AND B.BOARD_CONTENT LIKE '%' || #{querys} || '%'
			</when>
			<when test='key == 3'>
				AND (
				B.BOARD_TITLE LIKE '%' || #{querys} || '%'
				OR
				B.BOARD_CONTENT LIKE '%' || #{querys} || '%'
				)
			</when>
			<when test='key == 4'>
				AND M.MEMBER_NICKNAME LIKE '%' || #{querys} || '%'
			</when>
			<when test='key == 5'>
				AND 1 = 0
			</when>
		</choose>

		UNION ALL

		SELECT
		B.BOARD_NO,
		B.BOARD_TITLE,
		B.READ_COUNT,
		M.MEMBER_NICKNAME,
		B.BOARD_CODE,
		M.PROFILE_IMG,
		(SELECT COUNT(*) FROM RECIPE_COMMENT C WHERE C.BOARD_NO = B.BOARD_NO) AS
		COMMENT_COUNT,
		(SELECT COUNT(*) FROM RECIPE_BOARD_LIKE L WHERE L.BOARD_NO = B.BOARD_NO) AS
		LIKE_COUNT,
		S.IMG_PATH AS THUMBNAIL_IMG_PATH,
		S.IMG_RENAME AS THUMBNAIL_IMG_RENAME,
		(SELECT LISTAGG(H.TAG_NAME, ', ') WITHIN GROUP (ORDER BY H.TAG_NAME)
		FROM BOARD_HASHTAG BH
		JOIN HASHTAG H ON BH.TAG_NO = H.TAG_NO
		WHERE BH.BOARD_NO = B.BOARD_NO) AS TAGS,
		B.BOARD_CREATE_DATE AS RAW_DATE,
            <![CDATA[
            CASE
                WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 / 60 THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60 * 60) || '초 전'
                WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60) || '분 전'
                WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24) || '시간 전'
                ELSE TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD')
            END 
            ]]>
		AS BOARD_CREATE_DATE,
		'RECIPE' AS BOARD_TYPE
		FROM RECIPE_BOARD B
		JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO

		LEFT JOIN (
		SELECT BOARD_NO, IMG_PATH, IMG_RENAME
		FROM BOARD_STEP
		WHERE THUMBNAIL_CHECK = 'Y'
		) S ON B.BOARD_NO = S.BOARD_NO

		LEFT JOIN (
		SELECT BOARD_NO, IMG_PATH, IMG_RENAME
		FROM BOARD_STEP
		WHERE THUMBNAIL_CHECK = 'Y'
		) S ON B.BOARD_NO = S.BOARD_NO

		LEFT JOIN (
		SELECT BOARD_NO, LISTAGG(STEP_CONTENT, ' ') WITHIN GROUP (ORDER BY STEP_NO)
		AS STEP_CONTENTS
		FROM BOARD_STEP
		GROUP BY BOARD_NO
		) STEP ON B.BOARD_NO = STEP.BOARD_NO

		WHERE B.BOARD_DEL_FL = 'N'
		<choose>
			<when test='key == 1'>
				AND B.BOARD_TITLE LIKE '%' || #{querys} || '%'
			</when>
			<when test='key == 2'>
				AND STEP.STEP_CONTENTS LIKE '%' || #{querys} || '%'
			</when>
			<when test='key == 3'>
				AND (
				B.BOARD_TITLE LIKE '%' || #{querys} || '%'
				OR STEP.STEP_CONTENTS LIKE '%' || #{querys} || '%'
				)
			</when>
			<when test='key == 4'>
				AND M.MEMBER_NICKNAME LIKE '%' || #{querys} || '%'
			</when>
			<when test='key == 5'>
				AND EXISTS (
				SELECT 1
				FROM BOARD_HASHTAG BH
				JOIN HASHTAG HT ON BH.TAG_NO = HT.TAG_NO
				WHERE BH.BOARD_NO = B.BOARD_NO
				AND HT.TAG_NAME = REPLACE(#{querys}, '#', '')
				)
			</when>
		</choose>
		)
		),
		TARGET AS (
		SELECT RN
		FROM SEARCH_RESULT
		WHERE BOARD_NO = ${boardNo} AND BOARD_CODE = ${boardCode}
		)
		SELECT *
		FROM SEARCH_RESULT
		WHERE RN = (SELECT RN - 1 FROM TARGET)
	</select>

</mapper>