<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.co.lemona.myPage.model.mapper.MyPageMapper">
	
	<!-- 회원 정보 수정 -->
	<update id="updateInfo">
		UPDATE "MEMBER" SET
		MEMBER_NICKNAME =
		#{memberNickname},
		MEMBER_TEL = #{memberTel},
		MEMBER_ADDRESS =
		#{memberAddress}
		WHERE MEMBER_NO = #{memberNo}
	</update>

	<!-- 회원의 비밀번호 조회 -->
	<select id="selectPw">
		SELECT MEMBER_PW
		FROM "MEMBER"
		WHERE MEMBER_NO =
		#{memberNo}
	</select>

	<!-- 비밀번호 변경 -->
	<update id="changePw">
		UPDATE "MEMBER" SET
		MEMBER_PW = #{encPw}
		WHERE
		MEMBER_NO = #{memberNo}
	</update>

	<!-- 회원 탈퇴 -->
	<update id="secession">
		UPDATE "MEMBER" SET
		MEMBER_DEL_FL = 'Y'
		WHERE MEMBER_NO
		= #{memberNo}
	</update>


	<!-- 파일 정보를 DB에 삽입 -->
	<insert id="insertUploadFile">
		INSERT INTO "UPLOAD_FILE"
		VALUES(SEQ_FILE_NO.NEXTVAL,
		#{filePath},
		#{fileOriginalName}, #{fileRename}, DEFAULT,
		#{memberNo})
	</insert>


	<!-- 파일 목록 조회 -->
	<select id="fileList" resultType="UploadFile">
		SELECT FILE_NO, FILE_PATH,
		FILE_ORIGINAL_NAME, FILE_RENAME,
		MEMBER_NICKNAME,
		TO_CHAR(FILE_UPLOAD_DATE, 'YYYY-MM-DD') FILE_UPLOAD_DATE
		FROM
		"UPLOAD_FILE"
		JOIN "MEMBER" ON ("UPLOAD_FILE".MEMBER_NO =
		"MEMBER".MEMBER_NO)
		WHERE "UPLOAD_FILE".MEMBER_NO = #{memberNo}
		ORDER BY
		FILE_NO DESC
	</select>

	<!-- 프로필 이미지 변경 -->
	<update id="profile">
		UPDATE "MEMBER" SET
		PROFILE_IMG = #{profileImg}
		WHERE
		MEMBER_NO = #{memberNo}
	</update>

	<!-- 사용자 No 조회 -->
	<!-- 민장 -->
	<select id="searchMemberNo">
		SELECT MEMBER_NO
		FROM "MEMBER"
		WHERE MEMBER_NICKNAME = #{nickname}
	</select>

	<!-- 사용자 조회 -->
	<!-- 미애 -->
	<select id="selectMember">
		SELECT * FROM "MEMBER"
		WHERE MEMBER_NO = #{memberNo}
	</select>

	<!-- 특정 사용자의 레시피 수 조회 -->
	<!-- 미애 -->
	<select id="getMemberRecipeListCount">
		SELECT COUNT(*)
		FROM "RECIPE_BOARD"
		WHERE BOARD_DEL_FL='N'
		AND MEMBER_NO = ${memberNo}
	</select>
	
	<!-- 사용자가 작성한 레피시 목록 조회 -->
	<!-- 미애 -->
	<select id="selectMemberRecipeList">
		SELECT 
		    B.BOARD_NO, 
		    B.BOARD_TITLE, 
		    B.READ_COUNT, 
		    M.MEMBER_NICKNAME,
		    B.BOARD_CODE,
		    M.PROFILE_IMG,
		
		    (SELECT COUNT(*) 
		     FROM RECIPE_COMMENT C
		     WHERE C.BOARD_NO = B.BOARD_NO
		     AND COMMENT_DEL_FL = 'N') AS COMMENT_COUNT,
		
		    (SELECT COUNT(*) 
		     FROM RECIPE_BOARD_LIKE L
		     WHERE L.BOARD_NO = B.BOARD_NO) AS LIKE_COUNT,
		     
		    CASE 
		        WHEN LB.MEMBER_NO IS NOT NULL THEN 1
		        ELSE 0
		    END AS LIKE_CHECK,
		
		    S.IMG_PATH AS THUMBNAIL_IMG_PATH,
		    S.IMG_RENAME AS THUMBNAIL_IMG_RENAME,
		    
		    <!-- 해시태그 -->
		    (SELECT LISTAGG(H.TAG_NAME, ', ') WITHIN GROUP (ORDER BY H.TAG_NAME)
		    FROM BOARD_HASHTAG BH
		    JOIN HASHTAG H ON BH.TAG_NO = H.TAG_NO
		    WHERE BH.BOARD_NO = B.BOARD_NO) AS TAGS,
		
		<![CDATA[
		    CASE
		        WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 / 60 THEN 
		            FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60 * 60) || '초 전'
		        WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 THEN 
		            FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60) || '분 전'
		        WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 THEN 
		            FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24) || '시간 전'
		        ELSE 
		            TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD')
		    END AS BOARD_CREATE_DATE
		]]>
		
		FROM RECIPE_BOARD B
		JOIN MEMBER M ON B.MEMBER_NO = M.MEMBER_NO
		
		<!-- 썸네일 -->
		LEFT JOIN (
		    SELECT BOARD_NO, IMG_PATH, IMG_RENAME
		    FROM BOARD_STEP
		    WHERE THUMBNAIL_CHECK = 'Y'
		) S ON B.BOARD_NO = S.BOARD_NO
		
		LEFT JOIN (
		    SELECT BOARD_NO, MEMBER_NO
		    FROM RECIPE_BOARD_LIKE
		    WHERE MEMBER_NO = #{memberNo}
		) LB ON B.BOARD_NO = LB.BOARD_NO
		
		WHERE B.BOARD_DEL_FL = 'N'
		
		<!-- 사용자 번호로 조회 -->
		AND B.MEMBER_NO = ${memberNo}
		ORDER BY BOARD_NO DESC
	</select>
	
	<!-- 사용자가 작성한 일반 게시글 갯수 조회 -->
	<select id="getMemberDefaultListCount">
	SELECT COUNT(*)
	FROM "BOARD"
	WHERE BOARD_DEL_FL='N'
	AND MEMBER_NO = ${memberNo}
	</select>

	<!-- 사용자가 작성한 일반 게시글 조회 -->
	<!-- 미애 -->
	<select id="selectMemberBoardList">
		SELECT 
		B.BOARD_NO, 
		B.BOARD_TITLE, 
		B.READ_COUNT, 
		M.MEMBER_NICKNAME, 
		B.BOARD_CODE,
		B.BOARD_CONTENT,
		M.PROFILE_IMG,
		
		(SELECT COUNT(*) FROM "DEFAULT_COMMENT" C WHERE
		C.BOARD_NO = B.BOARD_NO AND COMMENT_DEL_FL = 'N') COMMENT_COUNT,
		
		(SELECT COUNT(*) FROM
		"DEFAULT_BOARD_LIKE" L WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
		CASE
		WHEN LB.MEMBER_NO IS NOT NULL THEN 1
		ELSE 0
		END AS LIKE_CHECK,
		<![CDATA[
			CASE 
				WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24 / 60
				THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60 * 60) || '초 전'
				
				WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 / 24
				THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24 * 60) || '분 전'
				
				WHEN SYSDATE - B.BOARD_CREATE_DATE < 1 
				THEN FLOOR((SYSDATE - B.BOARD_CREATE_DATE) * 24) || '시간 전'
			ELSE TO_CHAR(B.BOARD_CREATE_DATE, 'YYYY-MM-DD')
			END BOARD_CREATE_DATE
		]]>

		FROM "BOARD" B
		JOIN "MEMBER" M ON(B.MEMBER_NO = M.MEMBER_NO)
		LEFT JOIN (
		SELECT BOARD_NO, MEMBER_NO
		FROM "DEFAULT_BOARD_LIKE"
		WHERE MEMBER_NO = #{memberNo}
		) LB ON LB.BOARD_NO = B.BOARD_NO
		WHERE
		BOARD_DEL_FL = 'N'
		AND BOARD_CODE = 2
		
		<!-- 사용자 번호로 조회 -->
		AND B.MEMBER_NO = #{memberNo}
		ORDER BY BOARD_NO DESC
	</select>
	
	<!-- 사용자가 쓴 레시피 게시판 코멘트 -->
	<select id="selectRecipeCommentCount">
		SELECT COUNT(*) FROM
		RECIPE_BOARD
		WHERE MEMBER_NO=#{memberNo}
	</select>
	
	<!-- 사용자가 쓴 일반 게시판 코멘트 -->
	<select id="selectCommentCount">
		SELECT COUNT(*) FROM
		DEFAULT_COMMENT
		WHERE MEMBER_NO=#{memberNo}
	</select>

	
	<!-- 프로필 업데이트 명하-->
	<update id="updateProfile">
 	   UPDATE member
    	<set>
        	<if test="profileImg != null">
            	profile_img = #{profileImg},
        	</if>
        	<if test="memberName != null">
            	member_name = #{memberName},
        	</if>
        	<if test="memberNickname != null">
            	member_nickname = #{memberNickname},
        	</if>
    	</set>
    	WHERE member_no = #{memberNo}
	</update>
	
	<!-- 이미지 삭제 -->
	<update id="removeProfileImage">
    	UPDATE member
    	SET profile_img = '/images/user.png'
    	WHERE member_no = #{memberNo}
	</update>


	
</mapper>
