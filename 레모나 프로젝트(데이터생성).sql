--BEGIN
--    FOR t IN (SELECT table_name FROM user_tables) LOOP
--        EXECUTE IMMEDIATE 'DROP TABLE ' || t.table_name || ' 	DE CONSTRAINTS';
--    END LOOP;
--END;
--
--SELECT * FROM "RECIPE_COMMENT";
--SELECT * FROM "DEFAULT_COMMENT";
--SELECT * FROM "BOARD_HASHTAG"; -- 비어잇음
--SELECT * FROM "HASHTAG";
--SELECT * FROM "DEFAULT_BOARD_LIKE";
--SELECT * FROM "RECIPE_BOARD_LIKE";
--SELECT * FROM "BOARD_TYPE";
--SELECT * FROM "BOARD_STEP";
--SELECT * FROM "BOARD";
--SELECT * FROM "RECIPE_BOARD";
--SELECT * FROM "MEMBER";
--SELECT * FROM "CATEGORY";
--SELECT * FROM "DEFAULT_COMMENT";
--SELECT * FROM "RECIPE_COMMENT_LIKE";
--SELECT * FROM "DEFAULT_COMMENT_LIKE";

--COMMIT;

CREATE TABLE "RECIPE_COMMENT" (
	"COMMENT_NO"	NUMBER		NOT NULL,
	"COMMENT_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"COMMENT_WRITE_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"COMMENT_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"PARENT_COMMENT_NO"	NUMBER		NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

-- 레시피 댓글 번호 시퀀스 만들기
CREATE SEQUENCE SEQ_REC_COMMENT_NO NOCACHE;

INSERT INTO "RECIPE_COMMENT" VALUES (SEQ_REC_COMMENT_NO.NEXTVAL, '맛있겠어요!', SYSDATE, 'N', 1, NULL, 1);
INSERT INTO "RECIPE_COMMENT" VALUES (SEQ_REC_COMMENT_NO.NEXTVAL, '한번 해볼게요.', SYSDATE, 'N', 2, NULL, 2);
INSERT INTO "RECIPE_COMMENT" VALUES (SEQ_REC_COMMENT_NO.NEXTVAL, '굿레시피입니다.', SYSDATE, 'N', 3, NULL, 3);



SELECT * FROM "RECIPE_COMMENT";

COMMENT ON COLUMN "RECIPE_COMMENT"."COMMENT_NO" IS '댓글 번호';

COMMENT ON COLUMN "RECIPE_COMMENT"."COMMENT_CONTENT" IS '댓글 내용';

COMMENT ON COLUMN "RECIPE_COMMENT"."COMMENT_WRITE_DATE" IS '작성일';

COMMENT ON COLUMN "RECIPE_COMMENT"."COMMENT_DEL_FL" IS '삭제여부(Y/N)';

COMMENT ON COLUMN "RECIPE_COMMENT"."MEMBER_NO" IS '회원번호(FK)';

COMMENT ON COLUMN "RECIPE_COMMENT"."PARENT_COMMENT_NO" IS '부모댓글번호(FK)';

COMMENT ON COLUMN "RECIPE_COMMENT"."BOARD_NO" IS '게시글 번호(FK)';

CREATE TABLE "DEFAULT_COMMENT" (
	"COMMENT_NO"	NUMBER		NOT NULL,
	"COMMENT_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"COMMENT_WRITE_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"COMMENT_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"PARENT_COMMENT_NO"	NUMBER		NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

-- 기본 게시판 댓글 번호 시퀀스 만들기
CREATE SEQUENCE SEQ_BOARD_COMMENT_NO NOCACHE;

INSERT INTO "DEFAULT_COMMENT" VALUES (SEQ_BOARD_COMMENT_NO.NEXTVAL, '댓글1입니다.', SYSDATE, 'N', 1, NULL, 1);
INSERT INTO "DEFAULT_COMMENT" VALUES (SEQ_BOARD_COMMENT_NO.NEXTVAL, '댓글2입니다.', SYSDATE, 'N', 2, NULL, 2);
INSERT INTO "DEFAULT_COMMENT" VALUES (SEQ_BOARD_COMMENT_NO.NEXTVAL, '댓글3입니다.', SYSDATE, 'N', 3, NULL, 3);

SELECT * FROM "DEFAULT_COMMENT";

COMMENT ON COLUMN "DEFAULT_COMMENT"."COMMENT_NO" IS '댓글 번호';

COMMENT ON COLUMN "DEFAULT_COMMENT"."COMMENT_CONTENT" IS '댓글 내용';

COMMENT ON COLUMN "DEFAULT_COMMENT"."COMMENT_WRITE_DATE" IS '작성일';

COMMENT ON COLUMN "DEFAULT_COMMENT"."COMMENT_DEL_FL" IS '삭제여부(Y/N)';

COMMENT ON COLUMN "DEFAULT_COMMENT"."MEMBER_NO" IS '회원번호(FK)';

COMMENT ON COLUMN "DEFAULT_COMMENT"."PARENT_COMMENT_NO" IS '부모댓글번호(FK)';

COMMENT ON COLUMN "DEFAULT_COMMENT"."BOARD_NO" IS '게시글 번호(FK)';

CREATE TABLE "HASHTAG" (
	"TAG_NO"	NUMBER		NOT NULL,
	"TAG_NAME"	NVARCHAR2(10)		NOT NULL
);

-- 태그 번호 시퀀스 만들기
CREATE SEQUENCE SEQ_TAG_NO NOCACHE;

INSERT INTO "HASHTAG" VALUES (SEQ_TAG_NO.NEXTVAL, '매운맛');
INSERT INTO "HASHTAG" VALUES (SEQ_TAG_NO.NEXTVAL, '간단요리');
INSERT INTO "HASHTAG" VALUES (SEQ_TAG_NO.NEXTVAL, '아이들');

SELECT * FROM "HASHTAG";

COMMENT ON COLUMN "HASHTAG"."TAG_NO" IS '태그 번호(PK)';

COMMENT ON COLUMN "HASHTAG"."TAG_NAME" IS '태그 이름';


CREATE TABLE "BOARD_HASHTAG" (
	"TAG_NO"	NUMBER		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

-- ★!!!!! HASHTAG 테이블에서 생성된 번호를 넣어야 함 !!!!!★
INSERT INTO "BOARD_HASHTAG" VALUES (1, 1);
INSERT INTO "BOARD_HASHTAG" VALUES (2, 2);
INSERT INTO "BOARD_HASHTAG" VALUES (3, 3);

SELECT * FROM "BOARD_HASHTAG";

COMMENT ON COLUMN "BOARD_HASHTAG"."TAG_NO" IS '태그 번호(FK)';

COMMENT ON COLUMN "BOARD_HASHTAG"."BOARD_NO" IS '게시글 번호(PK)';


CREATE TABLE "DEFAULT_BOARD_LIKE" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

INSERT INTO "DEFAULT_BOARD_LIKE" VALUES (1, 1);
INSERT INTO "DEFAULT_BOARD_LIKE" VALUES (2, 2);
INSERT INTO "DEFAULT_BOARD_LIKE" VALUES (3, 3);

SELECT * FROM "DEFAULT_BOARD_LIKE";

COMMENT ON COLUMN "DEFAULT_BOARD_LIKE"."MEMBER_NO" IS '회원번호(FK)';

COMMENT ON COLUMN "DEFAULT_BOARD_LIKE"."BOARD_NO" IS '게시글 번호(PK)';

CREATE TABLE "RECIPE_BOARD_LIKE" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

INSERT INTO "RECIPE_BOARD_LIKE" VALUES (1, 1);
INSERT INTO "RECIPE_BOARD_LIKE" VALUES (2, 2);
INSERT INTO "RECIPE_BOARD_LIKE" VALUES (3, 3);

SELECT * FROM "RECIPE_BOARD_LIKE";

COMMENT ON COLUMN "RECIPE_BOARD_LIKE"."MEMBER_NO" IS '회원번호(FK)';

COMMENT ON COLUMN "RECIPE_BOARD_LIKE"."BOARD_NO" IS '게시글 번호(PK)';

CREATE TABLE "BOARD_TYPE" (
	"BOARD_CODE"	NUMBER		NOT NULL,
	"BOARD_NAME"	NVARCHAR2(20)		NOT NULL
);

INSERT INTO "BOARD_TYPE" VALUES (1, '레시피 게시판');
INSERT INTO "BOARD_TYPE" VALUES (2, '자유 게시판');
INSERT INTO "BOARD_TYPE" VALUES (3, '공지사항 게시판');

SELECT * FROM "BOARD_TYPE";

COMMENT ON COLUMN "BOARD_TYPE"."BOARD_CODE" IS '게시판 코드(PK)';

COMMENT ON COLUMN "BOARD_TYPE"."BOARD_NAME" IS '게시판 이름';

CREATE TABLE "BOARD_STEP" (
	"STEP_NO"	NUMBER		NOT NULL,
	"STEP_ORDER"	NUMBER		NOT NULL,
	"STEP_CONTENT"	NVARCHAR2(1000)		NOT NULL,
	"IMG_PATH"	NVARCHAR2(200)		NULL,
	"IMG_ORIGINAL_NAME"	NVARCHAR2(50)		NULL,
	"IMG_RENAME"	NVARCHAR2(50)		NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

-- 단계 시퀀스 만들기
CREATE SEQUENCE SEQ_BOARD_STEP_NO NOCACHE;

INSERT INTO "BOARD_STEP" VALUES (SEQ_BOARD_STEP_NO.NEXTVAL, 1, '고기를 볶습니다.', NULL, NULL, NULL, 1);
INSERT INTO "BOARD_STEP" VALUES (SEQ_BOARD_STEP_NO.NEXTVAL, 2, '양념을 넣고 끓입니다.', NULL, NULL, NULL, 1);
INSERT INTO "BOARD_STEP" VALUES (SEQ_BOARD_STEP_NO.NEXTVAL, 1, '면을 삶습니다.', NULL, NULL, NULL, 2);

SELECT * FROM "BOARD_STEP";

COMMIT;

COMMENT ON COLUMN "BOARD_STEP"."STEP_NO" IS '단계번호(PK)';

COMMENT ON COLUMN "BOARD_STEP"."STEP_ORDER" IS '단계순서';

COMMENT ON COLUMN "BOARD_STEP"."STEP_CONTENT" IS '설명 텍스트';

COMMENT ON COLUMN "BOARD_STEP"."IMG_PATH" IS '이미지 경로 저장';

COMMENT ON COLUMN "BOARD_STEP"."IMG_ORIGINAL_NAME" IS '업로드한 원본 파일명';

COMMENT ON COLUMN "BOARD_STEP"."IMG_RENAME" IS '서버에  저장된 파일명';

COMMENT ON COLUMN "BOARD_STEP"."BOARD_NO" IS '게시글 번호(PK)';


CREATE TABLE "BOARD" (
	"BOARD_NO"	NUMBER		NOT NULL,
	"BOARD_TITLE"	NVARCHAR2(100)		NOT NULL,
	"BOARD_CONTENT"	VARCHAR2(4000)		NOT NULL,
	"READ_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"BOARD_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"BOARD_CREATE_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"BOARD_UPDATE_DATE"	DATE		NULL,
	"BOARD_CODE"	NUMBER		NOT NULL,
	"MEMBER_NO"	NUMBER		NOT NULL
);

-- 기본 게시글 번호 시퀀스 만들기
CREATE SEQUENCE SEQ_BOARD_NO NOCACHE;

INSERT INTO "BOARD" VALUES (SEQ_BOARD_NO.NEXTVAL, '나의 최애 재료', '감자합니다 고구맙습니다', 0, 'N', SYSDATE, NULL, 1, 1);
INSERT INTO "BOARD" VALUES (SEQ_BOARD_NO.NEXTVAL, '마늘 없는 알리오올리오', '마늘을 넣으세오', 0, 'N', SYSDATE, NULL, 2, 1);
INSERT INTO "BOARD" VALUES (SEQ_BOARD_NO.NEXTVAL, '양꼬치', '구워먹는다', 0, 'N', SYSDATE, NULL, 3, 1);

SELECT * FROM "BOARD";

COMMENT ON COLUMN "BOARD"."BOARD_NO" IS '게시글 번호(PK)';

COMMENT ON COLUMN "BOARD"."BOARD_TITLE" IS '게시글 제목';

COMMENT ON COLUMN "BOARD"."BOARD_CONTENT" IS '게시글 내용';

COMMENT ON COLUMN "BOARD"."READ_COUNT" IS '조회수';

COMMENT ON COLUMN "BOARD"."BOARD_DEL_FL" IS '삭제여부';

COMMENT ON COLUMN "BOARD"."BOARD_CREATE_DATE" IS '작성일';

COMMENT ON COLUMN "BOARD"."BOARD_UPDATE_DATE" IS '수정일';

COMMENT ON COLUMN "BOARD"."BOARD_CODE" IS '게시판 코드(FK)';

COMMENT ON COLUMN "BOARD"."MEMBER_NO" IS '회원번호(FK)';

-- 
CREATE TABLE "DEFAULT_COMMENT_LIKE" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"COMMENT_NO"	NUMBER		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL
);

-- 기본 게시글 댓글 좋아요 시퀀스 만들기
CREATE SEQUENCE SEQ_BOARD_LIKE_NO NOCACHE;

INSERT INTO "DEFAULT_COMMENT_LIKE" ("MEMBER_NO", "COMMENT_NO", "BOARD_NO") VALUES (1, SEQ_BOARD_LIKE_NO.NEXTVAL, 1);
INSERT INTO "DEFAULT_COMMENT_LIKE" ("MEMBER_NO", "COMMENT_NO", "BOARD_NO") VALUES (2, SEQ_BOARD_LIKE_NO.NEXTVAL, 2);
INSERT INTO "DEFAULT_COMMENT_LIKE" ("MEMBER_NO", "COMMENT_NO", "BOARD_NO") VALUES (3, SEQ_BOARD_LIKE_NO.NEXTVAL, 3);

SELECT * FROM "DEFAULT_COMMENT_LIKE";

COMMENT ON COLUMN "DEFAULT_COMMENT_LIKE"."MEMBER_NO" IS '회원번호(PK)';

COMMENT ON COLUMN "DEFAULT_COMMENT_LIKE"."COMMENT_NO" IS '댓글 번호';

COMMENT ON COLUMN "DEFAULT_COMMENT_LIKE"."BOARD_NO" IS '게시글 번호(PK)';

CREATE TABLE "RECIPE_BOARD" (
	"BOARD_NO"	NUMBER		NOT NULL,
	"BOARD_TITLE"	NVARCHAR2(100)		NOT NULL,
	"READ_COUNT"	NUMBER	DEFAULT 0	NOT NULL,
	"BOARD_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"BOARD_CREATE_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"BOARD_UPDATE_DATE"	DATE		NULL,
	"MEMBER_NO"	NUMBER		NOT NULL,
	"BOARD_CODE"	NUMBER		NOT NULL,
	"CATEGORY_NO"	NUMBER		NOT NULL
);

-- 레시피 게시글 번호 시퀀스 만들기
CREATE SEQUENCE SEQ_RECIPE_B_NO NOCACHE;

INSERT INTO "RECIPE_BOARD" VALUES (SEQ_RECIPE_B_NO.NEXTVAL, '김치찌개', 0, 'N', SYSDATE, NULL, 1, 2, 1);
INSERT INTO "RECIPE_BOARD" VALUES (SEQ_RECIPE_B_NO.NEXTVAL, '파스타', 0, 'N', SYSDATE, NULL, 2, 2, 2);
INSERT INTO "RECIPE_BOARD" VALUES (SEQ_RECIPE_B_NO.NEXTVAL, '짜장면', 0, 'N', SYSDATE, NULL, 3, 2, 3);

SELECT * FROM "RECIPE_BOARD";

COMMENT ON COLUMN "RECIPE_BOARD"."BOARD_NO" IS '게시글 번호(PK)';

COMMENT ON COLUMN "RECIPE_BOARD"."BOARD_TITLE" IS '게시글 제목';

COMMENT ON COLUMN "RECIPE_BOARD"."READ_COUNT" IS '조회수';

COMMENT ON COLUMN "RECIPE_BOARD"."BOARD_DEL_FL" IS '삭제여부';

COMMENT ON COLUMN "RECIPE_BOARD"."BOARD_CREATE_DATE" IS '작성일';

COMMENT ON COLUMN "RECIPE_BOARD"."BOARD_UPDATE_DATE" IS '수정일';

COMMENT ON COLUMN "RECIPE_BOARD"."MEMBER_NO" IS '회원번호(FK)';

COMMENT ON COLUMN "RECIPE_BOARD"."BOARD_CODE" IS '게시판 코드(FK)';

COMMENT ON COLUMN "RECIPE_BOARD"."CATEGORY_NO" IS '카테고리 번호';

CREATE TABLE "RECIPE_COMMENT_LIKE" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"BOARD_NO"	NUMBER		NOT NULL,
	"COMMENT_NO"	NUMBER		NOT NULL
);

-- 레시피 게시글 댓글 좋아요 시퀀스 만들기
CREATE SEQUENCE SEQ_RECIPE_LIKE_NO NOCACHE;


INSERT INTO "RECIPE_COMMENT_LIKE" ("MEMBER_NO", "COMMENT_NO", "BOARD_NO") VALUES (1, SEQ_RECIPE_LIKE_NO.NEXTVAL, 1);
INSERT INTO "RECIPE_COMMENT_LIKE" ("MEMBER_NO", "COMMENT_NO", "BOARD_NO") VALUES (2, SEQ_RECIPE_LIKE_NO.NEXTVAL, 2);
INSERT INTO "RECIPE_COMMENT_LIKE" ("MEMBER_NO", "COMMENT_NO", "BOARD_NO") VALUES (3, SEQ_RECIPE_LIKE_NO.NEXTVAL, 3);

SELECT * FROM RECIPE_COMMENT_LIKE;

COMMENT ON COLUMN "RECIPE_COMMENT_LIKE"."MEMBER_NO" IS '회원번호(PK)';

COMMENT ON COLUMN "RECIPE_COMMENT_LIKE"."BOARD_NO" IS '게시글 번호(PK)';

COMMENT ON COLUMN "RECIPE_COMMENT_LIKE"."COMMENT_NO" IS '댓글 번호';

CREATE TABLE "MEMBER" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MEMBER_ID"	NVARCHAR2(20)		NOT NULL,
	"MEMBER_NAME"	NVARCHAR2(30)		NOT NULL,
	"MEMBER_NICKNAME"	NVARCHAR2(10)		NOT NULL,
	"MEMBER_EMAIL"	NVARCHAR2(50)		NOT NULL,
	"MEMBER_PW"	NVARCHAR2(100)		NOT NULL,
	"PROFILE_IMG"	VARCHAR(300)		NULL,
	"ENROLL_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"MEMBER_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL
);

-- 회원 번호 시퀀스 만들기
CREATE SEQUENCE SEQ_MEMBER_NO NOCACHE;

INSERT INTO "MEMBER" VALUES (SEQ_MEMBER_NO.NEXTVAL, 'user1', '홍길동', '길동이', 'user1@example.com', 'pw1234', NULL, SYSDATE, 'N');
INSERT INTO "MEMBER" VALUES (SEQ_MEMBER_NO.NEXTVAL, 'user2', '이순신', '순신이', 'user2@example.com', 'pw1234', NULL, SYSDATE, 'N');
INSERT INTO "MEMBER" VALUES (SEQ_MEMBER_NO.NEXTVAL, 'user3', '신사임당', '사임당', 'user3@example.com', 'pw1234', NULL, SYSDATE, 'N');

SELECT * FROM "MEMBER";

COMMENT ON COLUMN "MEMBER"."MEMBER_NO" IS '회원번호(PK)';

COMMENT ON COLUMN "MEMBER"."MEMBER_ID" IS '회원 아이디';

COMMENT ON COLUMN "MEMBER"."MEMBER_NAME" IS '회원 이름';

COMMENT ON COLUMN "MEMBER"."MEMBER_NICKNAME" IS '회원 닉네임';

COMMENT ON COLUMN "MEMBER"."MEMBER_EMAIL" IS '회원 이메일';

COMMENT ON COLUMN "MEMBER"."MEMBER_PW" IS '회원 비밀번호';

COMMENT ON COLUMN "MEMBER"."PROFILE_IMG" IS '프로필 이미지 경로';

COMMENT ON COLUMN "MEMBER"."ENROLL_DATE" IS '회원가입일';

COMMENT ON COLUMN "MEMBER"."MEMBER_DEL_FL" IS '회원탈퇴여부';

CREATE TABLE "CATEGORY" (
	"CATEGORY_NO"	NUMBER		NOT NULL,
	"CATEGORY_NAME"	NVARCHAR2(10)		NOT NULL
);

INSERT INTO "CATEGORY" VALUES (1, '한식');
INSERT INTO "CATEGORY" VALUES (2, '중식');
INSERT INTO "CATEGORY" VALUES (3, '양식');
INSERT INTO "CATEGORY" VALUES (4, '일식');

SELECT * FROM "CATEGORY";

COMMENT ON COLUMN "CATEGORY"."CATEGORY_NO" IS '카테고리 번호';

COMMENT ON COLUMN "CATEGORY"."CATEGORY_NAME" IS '카테고리 이름';

ALTER TABLE "RECIPE_COMMENT" ADD CONSTRAINT "PK_RECIPE_COMMENT" PRIMARY KEY (
	"COMMENT_NO"
);

ALTER TABLE "DEFAULT_COMMENT" ADD CONSTRAINT "PK_DEFAULT_COMMENT" PRIMARY KEY (
	"COMMENT_NO"
);

ALTER TABLE "BOARD_HASHTAG" ADD CONSTRAINT "PK_BOARD_HASHTAG" PRIMARY KEY (
	"TAG_NO",
	"BOARD_NO"
);

ALTER TABLE "HASHTAG" ADD CONSTRAINT "PK_HASHTAG" PRIMARY KEY (
	"TAG_NO"
);

ALTER TABLE "DEFAULT_BOARD_LIKE" ADD CONSTRAINT "PK_DEFAULT_BOARD_LIKE" PRIMARY KEY (
	"MEMBER_NO",
	"BOARD_NO"
);

ALTER TABLE "RECIPE_BOARD_LIKE" ADD CONSTRAINT "PK_RECIPE_BOARD_LIKE" PRIMARY KEY (
	"MEMBER_NO",
	"BOARD_NO"
);

ALTER TABLE "BOARD_TYPE" ADD CONSTRAINT "PK_BOARD_TYPE" PRIMARY KEY (
	"BOARD_CODE"
);

ALTER TABLE "BOARD_STEP" ADD CONSTRAINT "PK_BOARD_STEP" PRIMARY KEY (
	"STEP_NO"
);

ALTER TABLE "BOARD" ADD CONSTRAINT "PK_BOARD" PRIMARY KEY (
	"BOARD_NO"
);

ALTER TABLE "DEFAULT_COMMENT_LIKE" ADD CONSTRAINT "PK_DEFAULT_COMMENT_LIKE" PRIMARY KEY (
	"MEMBER_NO",
	"COMMENT_NO",
	"BOARD_NO"
);

ALTER TABLE "RECIPE_BOARD" ADD CONSTRAINT "PK_RECIPE_BOARD" PRIMARY KEY (
	"BOARD_NO"
);

ALTER TABLE "RECIPE_COMMENT_LIKE" ADD CONSTRAINT "PK_RECIPE_COMMENT_LIKE" PRIMARY KEY (
	"MEMBER_NO",
	"BOARD_NO",
	"COMMENT_NO"
);

ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"MEMBER_NO"
);

ALTER TABLE "CATEGORY" ADD CONSTRAINT "PK_CATEGORY" PRIMARY KEY (
	"CATEGORY_NO"
);

ALTER TABLE "BOARD_HASHTAG" ADD CONSTRAINT "FK_HASHTAG_TO_BOARD_HASHTAG_1" FOREIGN KEY (
	"TAG_NO"
)
REFERENCES "HASHTAG" (
	"TAG_NO"
);

ALTER TABLE "BOARD_HASHTAG" ADD CONSTRAINT "FK_RECIPE_BOARD_TO_BOARD_HASHTAG_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "RECIPE_BOARD" (
	"BOARD_NO"
);

ALTER TABLE "DEFAULT_BOARD_LIKE" ADD CONSTRAINT "FK_MEMBER_TO_DEFAULT_BOARD_LIKE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "DEFAULT_BOARD_LIKE" ADD CONSTRAINT "FK_BOARD_TO_DEFAULT_BOARD_LIKE_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "BOARD" (
	"BOARD_NO"
);

ALTER TABLE "RECIPE_BOARD_LIKE" ADD CONSTRAINT "FK_MEMBER_TO_RECIPE_BOARD_LIKE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "RECIPE_BOARD_LIKE" ADD CONSTRAINT "FK_RECIPE_BOARD_TO_RECIPE_BOARD_LIKE_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "RECIPE_BOARD" (
	"BOARD_NO"
);

ALTER TABLE "DEFAULT_COMMENT_LIKE" ADD CONSTRAINT "FK_MEMBER_TO_DEFAULT_COMMENT_LIKE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "DEFAULT_COMMENT_LIKE" ADD CONSTRAINT "FK_DEFAULT_COMMENT_TO_DEFAULT_COMMENT_LIKE_1" FOREIGN KEY (
	"COMMENT_NO"
)
REFERENCES "DEFAULT_COMMENT" (
	"COMMENT_NO"
);

ALTER TABLE "DEFAULT_COMMENT_LIKE" ADD CONSTRAINT "FK_BOARD_TO_DEFAULT_COMMENT_LIKE_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "BOARD" (
	"BOARD_NO"
);

ALTER TABLE "RECIPE_COMMENT_LIKE" ADD CONSTRAINT "FK_MEMBER_TO_RECIPE_COMMENT_LIKE_1" FOREIGN KEY (
	"MEMBER_NO"
)
REFERENCES "MEMBER" (
	"MEMBER_NO"
);

ALTER TABLE "RECIPE_COMMENT_LIKE" ADD CONSTRAINT "FK_RECIPE_BOARD_TO_RECIPE_COMMENT_LIKE_1" FOREIGN KEY (
	"BOARD_NO"
)
REFERENCES "RECIPE_BOARD" (
	"BOARD_NO"
);

ALTER TABLE "RECIPE_COMMENT_LIKE" ADD CONSTRAINT "FK_RECIPE_COMMENT_TO_RECIPE_COMMENT_LIKE_1" FOREIGN KEY (
	"COMMENT_NO"
)
REFERENCES "RECIPE_COMMENT" (
	"COMMENT_NO"
);


-- ===========================
-- 1. UNIQUE 제약조건 추가
-- ===========================
ALTER TABLE "MEMBER" ADD CONSTRAINT "UQ_MEMBER_ID" UNIQUE ("MEMBER_ID");
ALTER TABLE "MEMBER" ADD CONSTRAINT "UQ_MEMBER_EMAIL" UNIQUE ("MEMBER_EMAIL");
ALTER TABLE "MEMBER" ADD CONSTRAINT "UQ_MEMBER_NICKNAME" UNIQUE ("MEMBER_NICKNAME");

-- ================================================
-- 2. ON DELETE CASCADE 외래키 재정의 (회원 기준)
-- ================================================
-- DEFAULT_COMMENT → MEMBER
ALTER TABLE "DEFAULT_COMMENT"
DROP CONSTRAINT "FK_DEFAULT_COMMENT_MEMBER";
ALTER TABLE "DEFAULT_COMMENT"
ADD CONSTRAINT "FK_DEFAULT_COMMENT_MEMBER"
FOREIGN KEY ("MEMBER_NO") REFERENCES "MEMBER"("MEMBER_NO") ON DELETE CASCADE;

-- RECIPE_COMMENT → MEMBER
ALTER TABLE "RECIPE_COMMENT"
DROP CONSTRAINT "FK_RECIPE_COMMENT_MEMBER";
ALTER TABLE "RECIPE_COMMENT"
ADD CONSTRAINT "FK_RECIPE_COMMENT_MEMBER"
FOREIGN KEY ("MEMBER_NO") REFERENCES "MEMBER"("MEMBER_NO") ON DELETE CASCADE;

-- BOARD → MEMBER
ALTER TABLE "BOARD"
DROP CONSTRAINT "FK_BOARD_MEMBER";
ALTER TABLE "BOARD"
ADD CONSTRAINT "FK_BOARD_MEMBER"
FOREIGN KEY ("MEMBER_NO") REFERENCES "MEMBER"("MEMBER_NO") ON DELETE CASCADE;

-- RECIPE_BOARD → MEMBER
ALTER TABLE "RECIPE_BOARD"
DROP CONSTRAINT "FK_RECIPE_BOARD_MEMBER";
ALTER TABLE "RECIPE_BOARD"
ADD CONSTRAINT "FK_RECIPE_BOARD_MEMBER"
FOREIGN KEY ("MEMBER_NO") REFERENCES "MEMBER"("MEMBER_NO") ON DELETE CASCADE;

-- DEFAULT_BOARD_LIKE → MEMBER
ALTER TABLE "DEFAULT_BOARD_LIKE"
DROP CONSTRAINT "FK_DEFAULT_BOARD_LIKE_MEMBER";
ALTER TABLE "DEFAULT_BOARD_LIKE"
ADD CONSTRAINT "FK_DEFAULT_BOARD_LIKE_MEMBER"
FOREIGN KEY ("MEMBER_NO") REFERENCES "MEMBER"("MEMBER_NO") ON DELETE CASCADE;

-- RECIPE_BOARD_LIKE → MEMBER
ALTER TABLE "RECIPE_BOARD_LIKE"
DROP CONSTRAINT "FK_RECIPE_BOARD_LIKE_MEMBER";
ALTER TABLE "RECIPE_BOARD_LIKE"
ADD CONSTRAINT "FK_RECIPE_BOARD_LIKE_MEMBER"
FOREIGN KEY ("MEMBER_NO") REFERENCES "MEMBER"("MEMBER_NO") ON DELETE CASCADE;

-- DEFAULT_COMMENT_LIKE → MEMBER
ALTER TABLE "DEFAULT_COMMENT_LIKE"
DROP CONSTRAINT "FK_DEFAULT_COMMENT_LIKE_MEMBER";
ALTER TABLE "DEFAULT_COMMENT_LIKE"
ADD CONSTRAINT "FK_DEFAULT_COMMENT_LIKE_MEMBER"
FOREIGN KEY ("MEMBER_NO") REFERENCES "MEMBER"("MEMBER_NO") ON DELETE CASCADE;

-- RECIPE_COMMENT_LIKE → MEMBER
ALTER TABLE "RECIPE_COMMENT_LIKE"
DROP CONSTRAINT "FK_RECIPE_COMMENT_LIKE_MEMBER";
ALTER TABLE "RECIPE_COMMENT_LIKE"
ADD CONSTRAINT "FK_RECIPE_COMMENT_LIKE_MEMBER"
FOREIGN KEY ("MEMBER_NO") REFERENCES "MEMBER"("MEMBER_NO") ON DELETE CASCADE;

-- =========================================================
-- 3. ON DELETE CASCADE 외래키 재정의 (게시글/댓글 중심 삭제)
-- =========================================================

-- 게시글 삭제 시 → 댓글 삭제
ALTER TABLE "DEFAULT_COMMENT"
DROP CONSTRAINT "FK_DEFAULT_COMMENT_BOARD";
ALTER TABLE "DEFAULT_COMMENT"
ADD CONSTRAINT "FK_DEFAULT_COMMENT_BOARD"
FOREIGN KEY ("BOARD_NO") REFERENCES "BOARD"("BOARD_NO") ON DELETE CASCADE;

ALTER TABLE "RECIPE_COMMENT"
DROP CONSTRAINT "FK_RECIPE_COMMENT_BOARD";
ALTER TABLE "RECIPE_COMMENT"
ADD CONSTRAINT "FK_RECIPE_COMMENT_BOARD"
FOREIGN KEY ("BOARD_NO") REFERENCES "RECIPE_BOARD"("BOARD_NO") ON DELETE CASCADE;

-- 게시글 삭제 시 → 좋아요 삭제
ALTER TABLE "DEFAULT_BOARD_LIKE"
DROP CONSTRAINT "FK_DEFAULT_BOARD_LIKE_BOARD";
ALTER TABLE "DEFAULT_BOARD_LIKE"
ADD CONSTRAINT "FK_DEFAULT_BOARD_LIKE_BOARD"
FOREIGN KEY ("BOARD_NO") REFERENCES "BOARD"("BOARD_NO") ON DELETE CASCADE;

ALTER TABLE "RECIPE_BOARD_LIKE"
DROP CONSTRAINT "FK_RECIPE_BOARD_LIKE_BOARD";
ALTER TABLE "RECIPE_BOARD_LIKE"
ADD CONSTRAINT "FK_RECIPE_BOARD_LIKE_BOARD"
FOREIGN KEY ("BOARD_NO") REFERENCES "RECIPE_BOARD"("BOARD_NO") ON DELETE CASCADE;

-- 게시글 삭제 시 → 댓글 좋아요 삭제
ALTER TABLE "DEFAULT_COMMENT_LIKE"
DROP CONSTRAINT "FK_DEFAULT_COMMENT_LIKE_BOARD";
ALTER TABLE "DEFAULT_COMMENT_LIKE"
ADD CONSTRAINT "FK_DEFAULT_COMMENT_LIKE_BOARD"
FOREIGN KEY ("BOARD_NO") REFERENCES "BOARD"("BOARD_NO") ON DELETE CASCADE;

ALTER TABLE "RECIPE_COMMENT_LIKE"
DROP CONSTRAINT "FK_RECIPE_COMMENT_LIKE_BOARD";
ALTER TABLE "RECIPE_COMMENT_LIKE"
ADD CONSTRAINT "FK_RECIPE_COMMENT_LIKE_BOARD"
FOREIGN KEY ("BOARD_NO") REFERENCES "RECIPE_BOARD"("BOARD_NO") ON DELETE CASCADE;

-- 댓글 삭제 시 → 댓글 좋아요 삭제
ALTER TABLE "DEFAULT_COMMENT_LIKE"
DROP CONSTRAINT "FK_DEFAULT_COMMENT_LIKE_COMMENT";
ALTER TABLE "DEFAULT_COMMENT_LIKE"
ADD CONSTRAINT "FK_DEFAULT_COMMENT_LIKE_COMMENT"
FOREIGN KEY ("COMMENT_NO") REFERENCES "DEFAULT_COMMENT"("COMMENT_NO") ON DELETE CASCADE;

ALTER TABLE "RECIPE_COMMENT_LIKE"
DROP CONSTRAINT "FK_RECIPE_COMMENT_LIKE_COMMENT";
ALTER TABLE "RECIPE_COMMENT_LIKE"
ADD CONSTRAINT "FK_RECIPE_COMMENT_LIKE_COMMENT"
FOREIGN KEY ("COMMENT_NO") REFERENCES "RECIPE_COMMENT"("COMMENT_NO") ON DELETE CASCADE;